<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Name.Text" xml:space="preserve">
    <value>Naam: </value>
  </data>
  <data name="NoParent" xml:space="preserve">
    <value>Geen ouer nie</value>
  </data>
  <data name="Error.Folder.Load" xml:space="preserve">
    <value>Fout met laai van gids</value>
  </data>
  <data name="Message.Required.FolderParent" xml:space="preserve">
    <value>Dopgehou moet &apos;n ouer en &apos;n naam hê</value>
  </data>
  <data name="Message.Folder.InvalidName" xml:space="preserve">
    <value>Gidsnaam nie geldig nie.</value>
  </data>
  <data name="Error.Folder.Save" xml:space="preserve">
    <value>Fout met stoor van gids</value>
  </data>
  <data name="Message.Folder.Subfolders.InvalidDelete" xml:space="preserve">
    <value>Gids het subgidse en kan nie geskrap word nie</value>
  </data>
  <data name="Error.Folder.Delete" xml:space="preserve">
    <value>Fout met skrap van gids</value>
  </data>
  <data name="Parent.HelpText" xml:space="preserve">
    <value>Kies die ouergids</value>
  </data>
  <data name="Name.HelpText" xml:space="preserve">
    <value>Gee die gidsnaam</value>
  </data>
  <data name="Parent.Text" xml:space="preserve">
    <value>Ouer: </value>
  </data>
  <data name="Permissions.Heading" xml:space="preserve">
    <value>Toestemmings</value>
  </data>
  <data name="DeleteFolder.Header" xml:space="preserve">
    <value>Skrap gids</value>
  </data>
  <data name="DeleteFolder.Message" xml:space="preserve">
    <value>Wil u definitief hierdie gids uitvee?</value>
  </data>
  <data name="Type.HelpText" xml:space="preserve">
    <value>Kies die gidstipe. Privaat vouers is slegs toeganklik vir gemagtigde gebruikers. Publieke gidse kan deur alle gebruikers verkry word</value>
  </data>
  <data name="Type.Text" xml:space="preserve">
    <value>Tik:</value>
  </data>
  <data name="Capacity.HelpText" xml:space="preserve">
    <value>Voer die maksimum gidskapasiteit (in megagrepe) in. Spesifiseer nul as die kapasiteit onbeperk is.</value>
  </data>
  <data name="Capacity.Text" xml:space="preserve">
    <value>Kapasiteit:</value>
  </data>
  <data name="ImageSizes.HelpText" xml:space="preserve">
    <value>Voer opsioneel &apos;n lys beeldgroottes in wat dinamies gegenereer kan word uit opgelaaide beelde (dws 200x200,400x400). Gebruik * om aan te dui dat die gids alle beeldgroottes ondersteun (word nie aanbeveel nie).</value>
  </data>
  <data name="ImageSizes.Text" xml:space="preserve">
    <value>Beeld groottes:</value>
  </data>
  <data name="FolderManagement.Title" xml:space="preserve">
    <value>Gids bestuur!</value>
  </data>
  <data name="Private" xml:space="preserve">
    <value>Private</value>
  </data>
  <data name="Public" xml:space="preserve">
    <value>Openbare</value>
  </data>
  <data name="Folder Management" xml:space="preserve">
    <value>Gids bestuur</value>
  </data>
  <data name="Message.Folder.Duplicate" xml:space="preserve">
    <value>Gidsnaam gespesifiseer bestaan reeds in ouer</value>
  </data>
  <data name="Settings.Heading" xml:space="preserve">
    <value>Instellings</value>
  </data>
  <data name="CacheControl.Text" xml:space="preserve">
    <value>Kas:</value>
  </data>
  <data name="CacheControl.HelpText" xml:space="preserve">
    <value>Optionally provide a Cache-Control directive for this folder. For example 'public, max-age=60' indicates that files in this folder should be cached for 60 seconds. Please note that when caching is enabled, changes to files will not be immediately reflected in the UI.</value>
  </data>
</root>