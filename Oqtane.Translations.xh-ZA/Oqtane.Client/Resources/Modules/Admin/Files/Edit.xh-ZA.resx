<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Name.Text" xml:space="preserve">
    <value>Igama: </value>
  </data>
  <data name="NoParent" xml:space="preserve">
    <value>Akukho mzali</value>
  </data>
  <data name="Error.Folder.Load" xml:space="preserve">
    <value>Kwenzeke impazamo ngelixa kufakwa isiqulathi seefayili</value>
  </data>
  <data name="Message.Required.FolderParent" xml:space="preserve">
    <value>Iziqulathi zeefayili kufuneka zibe nomzali kunye negama</value>
  </data>
  <data name="Message.Folder.InvalidName" xml:space="preserve">
    <value>Igama lesiqulathi seefayili alikho mthethweni.</value>
  </data>
  <data name="Error.Folder.Save" xml:space="preserve">
    <value>Impazamo yokugcina isiqulathi seefayili</value>
  </data>
  <data name="Message.Folder.Subfolders.InvalidDelete" xml:space="preserve">
    <value>Isiqulathi seefayili esingaphakathi kwaye asikwazi ukucinywa</value>
  </data>
  <data name="Error.Folder.Delete" xml:space="preserve">
    <value>Kwenzeke impazamo ngelixa kucinywa isiqulathi seefayili</value>
  </data>
  <data name="Parent.HelpText" xml:space="preserve">
    <value>Khetha isiqulathi seefayili esikhoyo</value>
  </data>
  <data name="Name.HelpText" xml:space="preserve">
    <value>Faka igama lesiqulathi seefayili</value>
  </data>
  <data name="Parent.Text" xml:space="preserve">
    <value>Umzali: </value>
  </data>
  <data name="Permissions.Heading" xml:space="preserve">
    <value>Iimvume</value>
  </data>
  <data name="DeleteFolder.Header" xml:space="preserve">
    <value>Cima isiqulathi seefayili</value>
  </data>
  <data name="DeleteFolder.Message" xml:space="preserve">
    <value>Uqinisekile ukuba unqwenela ukucima esi siqulathi-zifayili?</value>
  </data>
  <data name="Type.HelpText" xml:space="preserve">
    <value>Khetha uhlobo lwesiqulathi seefayili Iifolda zabucala zifikeleleka kuphela ngabasebenzisi abagunyazisiweyo. Iifolda zikawonke-wonke zinokufikeleleka kubo bonke abasebenzisi</value>
  </data>
  <data name="Type.Text" xml:space="preserve">
    <value>Uhlobo:</value>
  </data>
  <data name="Capacity.HelpText" xml:space="preserve">
    <value>Ngenisa ubukhulu bencwadi eneenkcukacha (ngokwemegabytes). Cacisa iqanda ukuba umthamo awunamkhawulo.</value>
  </data>
  <data name="Capacity.Text" xml:space="preserve">
    <value>Umthamo:</value>
  </data>
  <data name="ImageSizes.HelpText" xml:space="preserve">
    <value>Ngokuzikhethela faka uluhlu lobungakanani bemifanekiso enokuveliswa ngamandla kwimifanekiso elayishiweyo (okt 200x200,400x400). Sebenzisa * ukubonisa ukuba ifolda ixhasa bonke ubungakanani bemifanekiso (ayikhuthazwa).</value>
  </data>
  <data name="ImageSizes.Text" xml:space="preserve">
    <value>Ubungakanani bemifanekiso:</value>
  </data>
  <data name="FolderManagement.Title" xml:space="preserve">
    <value>Ulawulo lwencwadi eneenkcukacha!</value>
  </data>
  <data name="Private" xml:space="preserve">
    <value>Abucala</value>
  </data>
  <data name="Public" xml:space="preserve">
    <value>Uluntu</value>
  </data>
  <data name="Folder Management" xml:space="preserve">
    <value>Ulawulo lweziqulathi zeefayili</value>
  </data>
  <data name="Message.Folder.Duplicate" xml:space="preserve">
    <value>Igama lesiqulathi seefayili elibaluliweyo sele likho kuzali.</value>
  </data>
  <data name="Settings.Heading" xml:space="preserve">
    <value>Izicwangciso</value>
  </data>
  <data name="CacheControl.Text" xml:space="preserve">
    <value>I-Caching:</value>
  </data>
  <data name="CacheControl.HelpText" xml:space="preserve">
    <value>Optionally provide a Cache-Control directive for this folder. For example 'public, max-age=60' indicates that files in this folder should be cached for 60 seconds. Please note that when caching is enabled, changes to files will not be immediately reflected in the UI.</value>
  </data>
</root>